/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.30
 * Generated at: 2012-10-16 09:18:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.sql.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

  //--------------------------------------
  // 현재 소스 코드의 문제점 및 해결책
	//    1. 매번 DB를 접속하고 DB 접속 코드들이 흩어져있음
	//       --> DBCP의 Connection Pooling과 JNDI Lookup 활용
	//    2. O-O 적이지 못하다. (모듈화, 클래스화 부재)  
	//       --> Java Bean 이용
	//    3. JSP 코드에 Java 코드가 너무 많아 유지/관리 어려움 
	//       --> JSTL과 Servlet을 이용 MVC 처리
	//    4. XSS에 대한 방어 부족
	//       --> JSTL의 <c:out> 활용
  //--------------------------------------

  // DB 접속을 위한 준비
	
	Connection conn = null;
	Statement stmt = null;
	ResultSet rs = null;
	
	String dbUrl = "jdbc:mysql://localhost:3306/web2012";
	String dbUser = "web";
	String dbPassword = "asdf";
	
	// 페이지 설정
	int pageNo = 1;
	
	try {
		pageNo = Integer.parseInt(request.getParameter("page"));
	} catch (NumberFormatException ex) {}
	
	int numInPage = 10;												// 한페이지에 출력할 아이템 개수
	int startPos = (pageNo - 1) * numInPage; 	// 몇 번째 아이템 부터 이 페이지에?
	int numItems, numPages;
	

      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>회원목록</title>\r\n");
      out.write("\t<link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<link href=\"css/base.css\" rel=\"stylesheet\">\r\n");
      out.write("\t<script src=\"js/jquery-1.8.2.min.js\"></script>\r\n");
      out.write("\t<script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "share/header.jsp" + (("share/header.jsp").indexOf('?')>0? '&': '?') + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("current", request.getCharacterEncoding())+ "=" + org.apache.jasper.runtime.JspRuntimeLibrary.URLEncode("Sign Up", request.getCharacterEncoding()), out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <div class=\"container\">\r\n");
      out.write(" \t");

 	try {
	    Class.forName("com.mysql.jdbc.Driver");

	    // DB 접속
		conn = DriverManager.getConnection(dbUrl, dbUser, dbPassword);
 		
		stmt = conn.createStatement();
		
		// users 테이블: user 수 페이지수 개산
 		rs = stmt.executeQuery("SELECT COUNT(*) FROM users ORDER BY name");
		rs.next();
		numItems = rs.getInt(1);
		numPages = (int) Math.ceil((double)numItems / (double)numInPage);
		rs.close();
		stmt.close();
		
 		// users 테이블 SELECT
		stmt = conn.createStatement();
		rs = stmt.executeQuery("SELECT * FROM users ORDER BY name LIMIT " + startPos + ", " + numInPage);
		String gender;
 	
      out.write("\r\n");
      out.write(" \t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"span12 page-info\">\r\n");
      out.write("\t\t\t\t<div class=\"pull-left\">\r\n");
      out.write("\t\t\t\t\tTotal <b>");
      out.print(numItems );
      out.write("</b> users \r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"pull-right\">\r\n");
      out.write("\t\t\t\t\t<b>");
      out.print( pageNo);
      out.write("</b> page / total <b>");
      out.print( numPages );
      out.write("</b> pages\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write(" \t\t\t</div>\r\n");
      out.write(" \t\t</div>\r\n");
      out.write("\t\t<table class=\"table table-bordered table-stripped\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>ID</th>\r\n");
      out.write("\t\t\t\t\t<th>Name</th>\r\n");
      out.write("\t\t\t\t\t<th>Email</th>\r\n");
      out.write("\t\t\t\t\t<th>Gender</th>\r\n");
      out.write("\t\t\t\t\t<th>Country</th>\r\n");
      out.write("\t\t\t\t\t<th></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t");

				while(rs.next()) {
					gender = rs.getString("gender").equals("M") ? "남성":"여성";
			
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><a href=\"show.jsp?id=");
      out.print(rs.getInt("id"));
      out.write('"');
      out.write('>');
      out.print(rs.getString("userid") );
      out.write("</a></td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rs.getString("name") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rs.getString("email") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(gender );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(rs.getString("country") );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"signup.jsp?id=");
      out.print(rs.getInt("id"));
      out.write("\" class=\"btn btn-mini\">modify</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" class=\"btn btn-mini btn-danger\" data-action=\"delete\" data-id=\"");
      out.print(rs.getInt("id") );
      out.write("\" >delete</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"pagination pagination-centered\">\r\n");
      out.write("      <ul>\r\n");
      out.write("      \t");

      	// 페이지 네비게이션을 위한 준비
      	int startPageNo, endPageNo;
      	int delta = 5;
      	startPageNo = (pageNo <= delta) ? 1: pageNo - delta;
      	endPageNo = startPageNo + (delta * 2) + 1;
      	
      	if (endPageNo > numPages) {
      		endPageNo = numPages;
      	}
      	
      	// 이전 페이지로
      	if (pageNo <= 1) { 
      	
      out.write("\r\n");
      out.write("        \t<li class=\"disabled\"><a href=\"#\">&laquo;</a></li>\r\n");
      out.write("        ");
 
      	} else {
        
      out.write("\r\n");
      out.write("        \t<li><a href=\"index.jsp?page=");
      out.print( pageNo - 1);
      out.write("\">&laquo;</a></li>\r\n");
      out.write("        ");

        } 
      	
      	// 페이지 목록 출력 (현재-delta ~ 현재+delta까지)
        String className = "";
        for(int i = startPageNo; i <= endPageNo; i++) {
        	className = (i == pageNo) ? "active" : "";
        	out.println("<li class='" + className + "'>");
        	out.println("<a href='index.jsp?page=" + i + "'>" + i + "</a>");
        	out.println("</li>");
        }
        
        // 다음 페이지로
      	if (pageNo >= numPages) { 
      	
      out.write("\r\n");
      out.write("        \t<li class=\"disabled\"><a href=\"#\">&raquo;</a></li>\r\n");
      out.write("        ");
 
      	} else {
        
      out.write("\r\n");
      out.write("        \t<li><a href=\"index.jsp?page=");
      out.print( pageNo + 1);
      out.write("\">&raquo;</a></li>\r\n");
      out.write("        ");

        } 
        
      out.write("\r\n");
      out.write("     </ul>\r\n");
      out.write("    </div>\r\n");
      out.write("\t\t");

		} catch (SQLException e) {
			// SQL 에러의 경우 에러 메시지 출력
			out.print("<div class='alert'>" + e.getLocalizedMessage() + "</div>");
		}finally {
			// 무슨 일이 있어도 리소스를 제대로 종료
			if (rs != null) try{rs.close();} catch(SQLException e) {}
			if (stmt != null) try{stmt.close();} catch(SQLException e) {}
			if (conn != null) try{conn.close();} catch(SQLException e) {}
		}
		
      out.write("\r\n");
      out.write("\t\t<div class=\"form-action\">\r\n");
      out.write("\t\t\t<a href=\"signup.jsp\" class=\"btn btn-primary\">Sign Up</a>\r\n");
      out.write("\t\t</div>\t \t\r\n");
      out.write("  </div>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "share/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(\"a[data-action='delete']\").click(function() {\r\n");
      out.write("\t\tif (confirm(\"정말로 삭제하시겠습니까?\")) {\r\n");
      out.write("\t\t\tlocation = 'delete.jsp?id=' + $(this).attr('data-id');\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t});\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
