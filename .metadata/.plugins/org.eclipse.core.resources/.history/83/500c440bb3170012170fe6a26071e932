package kr.ac.mju.dislab.user2.servlet;

import java.io.IOException;
import java.io.PrintWriter;
import java.lang.reflect.InvocationTargetException;
import java.sql.SQLException;
import java.util.*;

import javax.naming.NamingException;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.beanutils.BeanUtils;

import kr.ac.mju.dislab.user2.*;

/**
 * Servlet implementation class User
 */
@WebServlet("/user")
public class UserServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public UserServlet() {
        super();
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		String op = request.getParameter("op");
		List<String> errorMsgs = new ArrayList<String>();
		String viewPageName = "";
		boolean ret;
		
		int id = getIntFromParameter(request.getParameter("id"), -1);
		
		if (op == null && id > 0) {
			op = "show";
		}
		
		try {
			if (op == null || op.equals("index")) {
				int page = getIntFromParameter(request.getParameter("page"), 1);
				
				PageResult<User> users = UserDAO.getPage(page, 3);
				request.setAttribute("users", users);
				request.setAttribute("page", page);
				viewPageName = "index.jsp";
			} else if (op.equals("show")) {
				User user = UserDAO.findById(id);
				request.setAttribute("user", user);

				viewPageName = "show.jsp";
			} else if (op.equals("update")) {
				User user = UserDAO.findById(id);
				request.setAttribute("user", user);
				request.setAttribute("method", "PUT");
				
				viewPageName = "signup.jsp";
			} else if (op.equals("delete")) {
				ret = UserDAO.remove(id);
				request.setAttribute("result", ret);
				
				viewPageName = "delete.jsp";
			} else if (op.equals("signup")) {
				request.setAttribute("method", "POST");
				request.setAttribute("user", new User());
				viewPageName = "signup.jsp";
			} else {
				request.setAttribute("error", "알 수 없는 명령입니다");
				viewPageName = "error.jsp";
			}
		} catch (SQLException | NamingException e) {
			request.setAttribute("error", e.getMessage());
			e.printStackTrace();
			viewPageName = "error.jsp";
		}
		
		RequestDispatcher dispatcher = request.getRequestDispatcher(viewPageName);
		dispatcher.forward(request,  response);
		
	}

	private int getIntFromParameter(String str, int defaultValue) {
		int id;
		
		try {
			id = Integer.parseInt(str);
		} catch (Exception e) {
			id = defaultValue;
		}
		return id;
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		boolean ret = false;
		Map<String, String[]> map = request.getParameterMap();
		User user = new User();
		String method = request.getParameter("_method");
		String actionUrl;
		request.setCharacterEncoding("utf-8");
		try {
			BeanUtils.populate(user, map);
			
			if (method == null || method.equals("POST")) {
				ret = UserDAO.create(user);
				actionUrl = "register.jsp";
			} else {
				ret = UserDAO.update(user);
				actionUrl = "update.jsp";
			}
		} catch (IllegalAccessException | InvocationTargetException | SQLException | NamingException e) {
			request.setAttribute("error", e.getMessage());
			actionUrl = "error.jsp";
		}
		
		request.setAttribute("ret", ret);
		RequestDispatcher dispatcher = request.getRequestDispatcher(actionUrl);
		dispatcher.forward(request,  response);
	}

}
